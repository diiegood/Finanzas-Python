" tarea 2 practica de python para economsita"
"Jorge  Diego Valdez Fonseca"

#Se importa la libreria de numpy que es para gestion de matrices.
import numpy as np  #su llmamiento es con : np 

array1 = np.array([1,2,3,4,5])
array1

type(array1)

#numpy sirve para poder crear listas de matrices y funciones complejas con mayor velocidad
# y mayor cantidad de datos los cuales nos genera una ventaja de hasta 50% veces mas rapido

#el objeto matriz de numpy se llama --> ndarray 

valor = np.array([1,2,3,4,5,6,7,8,9])
valor[1]

valor = np.array([0], np.int16)
valor

x = np.array(range(7), dtype=int)
x[1] 
x

#x[1] = "is this a string"

#matrices multidimensionales (son las que siguen el mismo patron)


a = np.array([[1,3],[4,5]])
a

a = np.array([[1,0,0], [0,1,0],[0,0,1]])
a

a = np.arange(10)
a

a = np.ones((3,3)) #np.ones devuelve una matriz
a #asignandosele un tama√±o a la matriz

a = np.linspace(0,10,20) #Devuelve numeros espaciados uniformemente
a #durante un intervalo especifico

X,Y = np.meshgrid([1,2,3],[4,5,6]) #Devuelve una tupla de matrices de coordenadas
X # a partir de vectores de coordenadas.

Y #matriz Y

a = np.zeros((3,3)) #Devuelve una nueva matriz de ceros
a

###############################################################################
############################# Apilamiento de matrices #########################

numeros_aleatorios = np.arange(5)
numeros_definidos = ([9,10,11,12,13])
numeros_aleatorios
numeros_definidos

np.hstack([numeros_aleatorios, numeros_definidos]) #apilamiento horizontal
np.vstack([numeros_aleatorios, numeros_definidos]) #apilamiento vertical

np.c_[numeros_aleatorios, numeros_aleatorios] #apilar colummnas
np.r_[numeros_definidos, numeros_definidos] #apilar filas

x = list[1:30]
x = np.arange(4)
x

np.repeat(x,3)
np.little(x,(10,1)) #muestra una matriz
