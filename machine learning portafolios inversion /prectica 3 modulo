"Nota los modulos deben estar en la misma ruta"
"Cada vez que se hacen cambios en uno y no puede llamar se deben guardar y volver a cerrar para que reconozcan los cambios"
"cada modulo debe ser llamado y especificar la funcion a utilizar"

#############################################################################################################################

"Primera parte modulo a: el que va llamar"
"Practica 3"

import pandas as pd 
import funciones_curso as erk

hfi = erk.get_hfi_returns()
hfi.head()

pd.concat([hfi.mean(), hfi.median(), hfi.mean()>hfi.median()], axis="columns")

#valor 0 corresponde a la media
#valor 1 corresponde a la mediana
#valor 2 corresponde a ver si la media es menor a la mediana en boleano



#################################################################################################################################
"Nombre del modulo: ##funciones_curso##"

"Segunda parte modulo b: el que tiene el corazon de todas las funciones a ser llamadas"
"Cada funcion se va llamar independientemente a traves del modulo a"

import pandas as pd

#primera funcion

def drawdown(return_series: pd.Series):
    """Takes a time series of asset returns.
       returns a DataFrame with columns for
       the wealth index, 
       the previous peaks, and 
       the percentage drawdown
    """
    wealth_index = 1000*(1+return_series).cumprod()
    previous_peaks = wealth_index.cummax()
    drawdowns = (wealth_index - previous_peaks)/previous_peaks
    return pd.DataFrame({"Wealth": wealth_index, 
                         "Previous Peak": previous_peaks, 
                         "Drawdown": drawdowns})

#segunda funcion

def get_ffme_returns():
    """
    Load the Fama-French Dataset for the returns of the Top and Bottom Deciles by MarketCap
    """
    me_m = pd.read_csv("C:/Users/creep/OneDrive/Escritorio/programacion/data/Portfolios_Formed_on_ME_monthly_EW.csv",
                       header=0, index_col=0, na_values=-99.99)
    rets = me_m[['Lo 10', 'Hi 10']]
    rets.columns = ['SmallCap', 'LargeCap']
    rets = rets/100
    rets.index = pd.to_datetime(rets.index, format="%Y%m").to_period('M')
    return rets


#tercera funcion

def get_hfi_returns():
    """
    Load and format the EDHEC Hedge Fund Index Returns
    """
    hfi = pd.read_csv("C:/Users/creep/OneDrive/Escritorio/programacion/data/edhec-hedgefundindices.csv",
                      header=0, index_col=0, parse_dates=True)
    hfi = hfi/100
    hfi.index = hfi.index.to_period('M')
    return hfi

