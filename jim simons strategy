"jim simons simulated data generation"

import yfinance as yf
import pandas as pd 
import matplotlib.pyplot as plt
import numpy as np


#plt.style.use("seaborn")


#Definir el ticker
ticker= "SPY"
data= yf.download(ticker, start="2020-11-01", end="2024-11-10")

#Seleccionar solo los precios de cierre
close_prices = data["Close"]

ret = np.log(1 + close_prices.pct_change())
ret = ret.dropna()
ret

ret_data= pd.DataFrame(ret)
ret_data

#convertir las series en un dataframe
df = pd.DataFrame(close_prices)
df

df.head()
df.tail()

#graficar / falta definir detalles y etiquetas.
plt.plot(df)

#calcular los momentos de orden 
#momento de orden 1 rendimiento / media
#momendo de orden 2 volatilidad / desviacion estandar

ret_mean = ret.mean()
ret_mean 

ret_std= ret.std()
ret_std

###############################################################################

ret.shape[0]

#para ver la distribucion.
distribucion_spy = np.random.normal(ret_mean,ret_std,ret.shape[0])
distribucion_spy
